
#loading the libraries
import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score
     

#reading the data set into the code
sonar_data = pd.read_csv('/content/Copy of sonar data.csv',header=None)
sonar_data.head()
     

#getting to know the data set
sonar_data.describe
sonar_data.shape
sonar_data[60].value_counts()
sonar_data.groupby(60).mean()
     

#seperating the variables from the output
X = sonar_data.drop(columns=60,axis=1)
Y = sonar_data[60]
print(X.shape,Y.shape)
     

#splitting the data into training and testing set
X_train,X_test,Y_train,Y_test = train_test_split(X,Y,test_size=0.1,stratify=Y,random_state=1)
print(X_train.shape,Y_train.shape,X_test.shape,Y_test.shape)
     

#Training the logistic model
model = LogisticRegression()
     

model.fit(X_train,Y_train)
     
LogisticRegression()

#Accuracy on training data
X_train_prediction = model.predict(X_train)
training_data_accuracy = accuracy_score(X_train_prediction,Y_train)
print("Accuracy is ",training_data_accuracy)
     
Accuracy is  0.8342245989304813

X_test_prediction = model.predict(X_test)
test_data_accuracy = accuracy_score(X_test_prediction,Y_test)
print("Accuracy is ",test_data_accuracy)
     
Accuracy is  0.7619047619047619

#Making predictions
input_data = (0.0094,0.0166,0.0398,0.0359,0.0681,0.0706,0.1020,0.0893,0.0381,0.1328,0.1303,0.0273,0.0644,0.0712,0.1204,0.0717,0.1224,0.2349,0.3684,0.3918,0.4925,0.8793,0.9606,0.8786,0.6905,0.6937,0.5674,0.6540,0.7802,0.7575,0.5836,0.6316,0.8108,0.9039,0.8647,0.6695,0.4027,0.2370,0.2685,0.3662,0.3267,0.2200,0.2996,0.2205,0.1163,0.0635,0.0465,0.0422,0.0174,0.0172,0.0134,0.0141,0.0191,0.0145,0.0065,0.0129,0.0217,0.0087,0.0077,0.0122)

#changing input data as an numpy array
data = np.asarray(input_data)

#resizing the array to make prediction
data_final = data.reshape(1,-1)

prediction = model.predict(data_final)
print(prediction)
if (prediction[0]=='R'):
  print("It is a Rock")
else:
  print("It is a mine!")
